#!/bin/bash

# Commands to test pinned maps on Linux box
# Copy and paste these commands one by one

echo "=== AegisFlux Policy Maps Pinning Test Commands ==="
echo ""
echo "1. Connect to Linux box:"
echo "   ssh steve@192.168.64.17"
echo "   # Password: C!sco#123"
echo ""
echo "2. Create eBPF source file:"
echo "   cat > /tmp/simple_policy_maps.bpf.c << 'EOF'"
echo "   #include <linux/bpf.h>"
echo "   #include <bpf/bpf_helpers.h>"
echo ""
echo "   struct policy_edge {"
echo "       __u32 src_ip;"
echo "       __u32 dst_ip;"
echo "       __u32 src_mask;"
echo "       __u32 dst_mask;"
echo "       __u16 src_port;"
echo "       __u16 dst_port;"
echo "       __u8 protocol;"
echo "       __u8 action;"
echo "       __u8 priority;"
echo "       __u32 process_uid;"
echo "       __u32 process_gid;"
echo "       __u64 timestamp;"
echo "   };"
echo ""
echo "   struct allow_cidr {"
echo "       __u32 prefix_len;"
echo "       __u32 ip;"
echo "       __u8 action;"
echo "       __u8 priority;"
echo "       __u64 timestamp;"
echo "   };"
echo ""
echo "   struct {"
echo "       __uint(type, BPF_MAP_TYPE_HASH);"
echo "       __uint(max_entries, 1024);"
echo "       __type(key, __u32);"
echo "       __type(value, struct policy_edge);"
echo "       __uint(pinning, PIN_GLOBAL_NS);"
echo "   } policy_edges SEC(\".maps\");"
echo ""
echo "   struct {"
echo "       __uint(type, BPF_MAP_TYPE_LPM_TRIE);"
echo "       __uint(max_entries, 512);"
echo "       __type(key, struct allow_cidr);"
echo "       __type(value, __u8);"
echo "       __uint(pinning, PIN_GLOBAL_NS);"
echo "   } allow_lpm4 SEC(\".maps\");"
echo ""
echo "   char _license[] SEC(\"license\") = \"GPL\";"
echo "   EOF"
echo ""
echo "3. Create aegis directory:"
echo "   sudo mkdir -p /sys/fs/bpf/aegis"
echo ""
echo "4. Compile eBPF program:"
echo "   clang -g -O2 -target bpf -D__TARGET_ARCH_arm64 -I/usr/include/aarch64-linux-gnu -c /tmp/simple_policy_maps.bpf.c -o /tmp/simple_policy_maps.o"
echo ""
echo "5. Load program to create pinned maps:"
echo "   sudo bpftool prog load /tmp/simple_policy_maps.o /sys/fs/bpf/aegis/policy_maps"
echo ""
echo "6. Verify maps were created:"
echo "   ls -la /sys/fs/bpf/aegis/"
echo "   sudo bpftool map show pinned /sys/fs/bpf/aegis/policy_edges"
echo "   sudo bpftool map show pinned /sys/fs/bpf/aegis/allow_lpm4"
echo ""
echo "7. Add test data:"
echo "   sudo bpftool map update pinned /sys/fs/bpf/aegis/policy_edges key 1 0 0 0 value 192.168.1.0 192.168.2.0 255.255.255.0 255.255.255.0 80 443 6 1 10 1000 1000 0"
echo "   sudo bpftool map update pinned /sys/fs/bpf/aegis/allow_lpm4 key 24 192.168.1.0 0 0 0 value 1"
echo ""
echo "8. Verify data:"
echo "   sudo bpftool map dump pinned /sys/fs/bpf/aegis/policy_edges"
echo "   sudo bpftool map dump pinned /sys/fs/bpf/aegis/allow_lpm4"
echo ""
echo "=== Expected Results ==="
echo "✓ Maps created under /sys/fs/bpf/aegis/"
echo "✓ Policy edge: 192.168.1.0 -> 192.168.2.0 (TCP 80->443, ALLOW)"
echo "✓ Allow CIDR: 192.168.1.0/24 (ALLOW)"
echo "✓ Maps can be dumped and verified"
echo ""
echo "=== Alternative: Use Demo Program ==="
echo "If manual testing doesn't work, run the demo program:"
echo "cd /Users/stevengerhart/workspace/github/sgerhart/aegis_agent/agents/local-agent-go"
echo "go run ./cmd/pin_maps_demo"
