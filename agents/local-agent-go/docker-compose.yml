version: '3.8'

services:
  aegisflux-agent:
    build: .
    container_name: aegisflux-agent
    restart: unless-stopped
    privileged: true  # Required for eBPF operations
    cap_add:
      - BPF
      - NET_ADMIN
      - SYS_ADMIN
    environment:
      - AGENT_REGISTRY_URL=http://registry:8090
      - NATS_URL=nats://nats:4222
      - AGENT_HTTP_ADDR=:7070
      - AGENT_POLL_INTERVAL=10s
      - AGENT_BUNDLES_DIR=/opt/aegisflux/bundles
      - AGENT_HOST_ID=${HOST_ID:-host-unknown}
      - VAULT_URL=${VAULT_URL:-}
      - VAULT_TOKEN=${VAULT_TOKEN:-}
      - DEV_PUBLIC_KEY_PATH=${DEV_PUBLIC_KEY_PATH:-}
    volumes:
      - ./bundles:/opt/aegisflux/bundles
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "7070:7070"
    networks:
      - aegisflux
    depends_on:
      - registry
      - nats
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7070/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  registry:
    image: nginx:alpine
    container_name: aegisflux-registry
    restart: unless-stopped
    ports:
      - "8090:80"
    volumes:
      - ./registry:/usr/share/nginx/html:ro
    networks:
      - aegisflux
    command: >
      sh -c "
        echo 'server {
          listen 80;
          location / {
            root /usr/share/nginx/html;
            try_files $$uri $$uri/ =404;
          }
          location /artifacts/for-host/ {
            add_header Content-Type application/json;
            return 200 '"'"'{"artifacts":[],"total":0}'"'"';
          }
        }' > /etc/nginx/conf.d/default.conf &&
        nginx -g 'daemon off;'
      "

  nats:
    image: nats:alpine
    container_name: aegisflux-nats
    restart: unless-stopped
    ports:
      - "4222:4222"
    networks:
      - aegisflux
    command: ["-js", "-m", "8222"]

networks:
  aegisflux:
    driver: bridge

volumes:
  bundles:
    driver: local
