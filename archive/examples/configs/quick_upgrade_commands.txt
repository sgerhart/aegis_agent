# Quick Agent Upgrade Commands for Linux Host
# Copy and paste these commands on your Linux host (192.168.193.128)

# 1. Stop current agent
sudo pkill -f aegis-agent
sleep 2

# 2. Backup current setup
sudo mkdir -p /opt/aegis-backup
sudo cp -r /opt/aegis-agent/* /opt/aegis-backup/ 2>/dev/null || echo "No existing setup to backup"

# 3. Create proper systemd service for current agent
sudo tee /etc/systemd/system/aegis.service << 'EOF'
[Unit]
Description=Aegis eBPF Agent
After=network.target
Wants=network.target

[Service]
Type=simple
User=root
ExecStart=/opt/aegis-agent/aegis-agent
Restart=always
RestartSec=5
StandardOutput=journal
StandardError=journal

# Security settings
NoNewPrivileges=false
PrivateDevices=false
ProtectSystem=false
ProtectHome=false

# Required for eBPF
AmbientCapabilities=CAP_SYS_ADMIN CAP_NET_ADMIN CAP_BPF
CapabilityBoundingSet=CAP_SYS_ADMIN CAP_NET_ADMIN CAP_BPF

[Install]
WantedBy=multi-user.target
EOF

# 4. Reload systemd and enable service
sudo systemctl daemon-reload
sudo systemctl enable aegis

# 5. Start the service
sudo systemctl start aegis

# 6. Check status
sudo systemctl status aegis

# 7. Test endpoints
sleep 5
curl http://localhost:7070/healthz
curl http://localhost:7070/status | jq '.' 2>/dev/null || curl http://localhost:7070/status

# 8. View logs
echo "=== Recent logs ==="
sudo journalctl -u aegis --no-pager -n 20

# 9. Create a simple test policy
sudo mkdir -p /opt/aegis-agent/policies
sudo tee /opt/aegis-agent/policies/test.json << 'EOF'
{
  "id": "test-policy",
  "name": "Test Policy",
  "description": "Simple test for agent validation",
  "type": "network",
  "priority": 100,
  "enabled": true,
  "rules": [
    {
      "id": "test-rule",
      "action": "deny",
      "priority": 10,
      "conditions": [
        {"field": "dest_ip", "operator": "eq", "value": "8.8.8.8"},
        {"field": "protocol", "operator": "eq", "value": "tcp"}
      ],
      "metadata": {
        "description": "Test rule for Google DNS",
        "test": true
      }
    }
  ]
}
EOF

# 10. Test the agent with the policy (dry-run)
sudo /opt/aegis-agent/aegis-agent --help | head -5
sudo /opt/aegis-agent/aegis-agent --version 2>/dev/null || echo "No version flag"

# 11. Check which binary is actually running
ps aux | grep aegis
ls -la /opt/aegis-agent/
file /opt/aegis-agent/aegis-agent

# 12. Set up log rotation
sudo tee /etc/logrotate.d/aegis << 'EOF'
/var/log/aegis/*.log {
    daily
    missingok
    rotate 7
    compress
    notifempty
    create 644 root root
    postrotate
        systemctl reload aegis 2>/dev/null || true
    endscript
}
EOF

# 13. Create monitoring script
sudo tee /opt/aegis-agent/monitor.sh << 'EOF'
#!/bin/bash
# Aegis Agent Monitoring Script

echo "=== Aegis Agent Status ==="
echo "Date: $(date)"
echo "Host: $(hostname)"
echo "Architecture: $(uname -m)"
echo ""

echo "Service Status:"
systemctl is-active aegis && echo "✅ Service Active" || echo "❌ Service Inactive"
systemctl is-enabled aegis && echo "✅ Service Enabled" || echo "❌ Service Disabled"
echo ""

echo "Process Check:"
ps aux | grep -E '[a]egis' || echo "❌ No aegis processes found"
echo ""

echo "Network Ports:"
ss -tlnp | grep aegis || echo "❌ No aegis ports listening"
echo ""

echo "Health Check:"
curl -s --max-time 3 http://localhost:7070/healthz || echo "❌ Health endpoint not responding"
echo ""

echo "Recent Logs (last 5 lines):"
journalctl -u aegis --no-pager -n 5
echo ""

echo "System Resources:"
free -h | grep Mem
df -h / | tail -1
echo ""
EOF

sudo chmod +x /opt/aegis-agent/monitor.sh

# 14. Run the monitoring script
sudo /opt/aegis-agent/monitor.sh

echo ""
echo "✅ Quick upgrade completed!"
echo ""
echo "Next steps:"
echo "1. Monitor: sudo /opt/aegis-agent/monitor.sh"
echo "2. Logs: sudo journalctl -u aegis -f"
echo "3. Status: curl http://192.168.193.128:7070/status"
echo "4. Health: curl http://192.168.193.128:7070/healthz"
